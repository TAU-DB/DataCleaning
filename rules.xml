<?xml version="1.0" encoding="UTF-8"?>
<rules>
<rule type="condition_generating">
	<lhs>
		<relational_formula table="Countries">
			<variable name="x1" column="ID" type="Integer" is_constant="false"/>
			<variable name="x2" column="country" type="String" is_constant="false"/>
			<variable name="x3" column="continent" type="String" is_constant="false"/>
		</relational_formula>
		<relational_formula table="Countries">
			<variable name="x4" column="ID" type="Integer" is_constant="false"/>
			<variable name="x5" column="country" type="String" is_constant="false"/>
			<variable name="x6" column="continent" type="String" is_constant="false"/>
		</relational_formula>
		<conditional_formula operator="==">
			<variable name="x2" column="country" type="String" is_constant="false"/>
			<variable name="x5" column="country" type="String" is_constant="false"/>
		</conditional_formula>
	</lhs>
	<rhs>
		<conditional_formula operator="==">
			<variable name="x3" column="continent" type="String" is_constant="false"/>
			<variable name="x6" column="continent" type="String" is_constant="false"/>
		</conditional_formula>
	</rhs>
	<false_query>
Select C1.ID, C1.country, C1.continent, C2.ID, C2.country, C2.continent 
From Countries As C1, Countries As C2 
Where C1.country = C2.country AND C1.continent != C2.continent;
	</false_query>
</rule>
<rule type="condition_generating">
	<lhs>
		<relational_formula table="Games">
			<variable name="x1" column="ID" type="Integer" is_constant="false"/>
			<variable name="x2" column="first_team" type="String" is_constant="false"/>
			<variable name="x3" column="second_team" type="String" is_constant="false"/>
			<variable name="x4" column="first_team_goals" type="Integer" is_constant="false"/>
			<variable name="x5" column="second_team_goals" type="Integer" is_constant="false"/>
			<variable name="x6" column="first_team_pen" type="Integer" is_constant="false"/>
			<variable name="x7" column="second_team_pen" type="Integer" is_constant="false"/>
		</relational_formula>
		<conditional_formula operator="==">
			<variable name="x4" column="first_team_goals" type="Integer" is_constant="false"/>
			<variable name="x5" column="second_team_goals" type="Integer" is_constant="false"/>
		</conditional_formula>
	</lhs>
	<rhs>
		<conditional_formula operator=">=">
			<variable name="x6" column="first_team_pen" type="Integer" is_constant="false"/>
			<variable name="0" is_constant="true" type="Integer" value="0"/>
		</conditional_formula>
		<conditional_formula operator=">=">
			<variable name="x7" column="second_team_pen" type="Integer" is_constant="false"/>
			<variable name="0" is_constant="true" type="Integer" value="0"/>
		</conditional_formula>
		<conditional_formula operator="!=">
			<variable name="x6" column="first_team_pen" type="Integer" is_constant="false"/>
			<variable name="x7" column="second_team_pen" type="Integer" is_constant="false"/>
		</conditional_formula>
	</rhs>
	<false_query>
Select ID, first_team, second_team, first_team_goals, second_team_goals, first_team_pen, second_team_pen
From Games 
Where first_team_goals = second_team_goals AND (first_team_pen &lt; 0 or second_team_pen &lt; 0 or first_team_pen = second_team_pen);
	</false_query>
</rule>
<rule type="tuple_generating">
	<lhs>
		<relational_formula table="Teams">
			<variable name="x1" column="ID" type="Integer" is_constant="false"/>
			<variable name="x2" column="team" type="String" is_constant="false"/>
			<variable name="x3" column="country" type="String" is_constant="false"/>
		</relational_formula>
	</lhs>
	<rhs>
		<relational_formula table="Countries">
			<variable name="z1" column="ID" type="Integer" is_constant="false"/>
			<variable name="x3" column="country" type="String" is_constant="false"/>
			<variable name="z2" column="continent" type="String" is_constant="false"/>
		</relational_formula>
	</rhs>
	<false_query>
Select ID, team, country 
From Teams 
Where country NOT IN (Select country from Countries);
	</false_query>
	<true_query>
Select Teams.ID, Teams.team, Teams.country, Countries.ID, Countries.country, Countries.continent 
From Teams, Countries
Where Teams.country = Countries.country;
	</true_query>
	<source_query>
Select ID, team, country 
From Teams 
Where country IN ($1);
	</source_query>
</rule>
<rule type="tuple_generating">
	<lhs>
		<relational_formula table="Games">
			<variable name="x1" column="ID" type="Integer" is_constant="false"/>
			<variable name="x2" column="first_team" type="String" is_constant="false"/>
			<variable name="x3" column="second_team" type="String" is_constant="false"/>
			<variable name="x4" column="first_team_goals" type="Integer" is_constant="false"/>
			<variable name="x5" column="second_team_goals" type="Integer" is_constant="false"/>
			<variable name="x6" column="first_team_pen" type="Integer" is_constant="false"/>
			<variable name="x7" column="second_team_pen" type="Integer" is_constant="false"/>
		</relational_formula>
	</lhs>
	<rhs>
		<relational_formula table="Teams">
			<variable name="z1" column="ID" type="Integer" is_constant="false"/>
			<variable name="x2" column="team" type="String" is_constant="false"/>
			<variable name="z2" column="country" type="String" is_constant="false"/>
		</relational_formula>
	</rhs>
	<false_query>
Select ID, first_team, second_team, first_team_goals, second_team_goals, first_team_pen, second_team_pen
From Games 
Where (first_team NOT IN (Select team from Teams));
	</false_query>
	<true_query>
Select Games.ID, Games.first_team, Games.second_team, Games.first_team_goals, Games.second_team_goals, Games.first_team_pen, Games.second_team_pen, Teams.ID, Teams.team, Teams.country
From Games, Teams
Where Games.first_team = Teams.team;
	</true_query>
	<source_query>
Select ID, first_team, second_team, first_team_goals, second_team_goals, first_team_pen, second_team_pen
From Games 
Where (first_team IN ($1));
	</source_query>
</rule>

<rule type="tuple_generating">
	<lhs>
		<relational_formula table="Games">
			<variable name="x1" column="ID" type="Integer" is_constant="false"/>
			<variable name="x2" column="first_team" type="String" is_constant="false"/>
			<variable name="x3" column="second_team" type="String" is_constant="false"/>
			<variable name="x4" column="first_team_goals" type="Integer" is_constant="false"/>
			<variable name="x5" column="second_team_goals" type="Integer" is_constant="false"/>
			<variable name="x6" column="first_team_pen" type="Integer" is_constant="false"/>
			<variable name="x7" column="second_team_pen" type="Integer" is_constant="false"/>
		</relational_formula>
	</lhs>
	<rhs>
		<relational_formula table="Teams">
			<variable name="z1" column="ID" type="Integer" is_constant="false"/>
			<variable name="x3" column="team" type="String" is_constant="false"/>
			<variable name="z2" column="country" type="String" is_constant="false"/>
		</relational_formula>
	</rhs>
	<false_query>
Select ID, first_team, second_team, first_team_goals, second_team_goals, first_team_pen, second_team_pen
From Games 
Where (second_team NOT IN (Select team from Teams));
	</false_query>
	<true_query>
Select Games.ID, Games.first_team, Games.second_team, Games.first_team_goals, Games.second_team_goals, Games.first_team_pen, Games.second_team_pen, Teams.ID, Teams.team, Teams.country
From Games, Teams
Where Games.second_team = Teams.team;
	</true_query>
	<source_query>
Select ID, first_team, second_team, first_team_goals, second_team_goals, first_team_pen, second_team_pen
From Games 
Where (second_team IN ($1));
	</source_query>
</rule>

<rule type="tuple_generating">
	<lhs>
		<relational_formula table="Games">
			<variable name="x1" column="ID" type="Integer" is_constant="false"/>
			<variable name="x2" column="first_team" type="String" is_constant="false"/>
			<variable name="x3" column="second_team" type="String" is_constant="false"/>
			<variable name="x4" column="first_team_goals" type="Integer" is_constant="false"/>
			<variable name="x5" column="second_team_goals" type="Integer" is_constant="false"/>
			<variable name="x6" column="first_team_pen" type="Integer" is_constant="false"/>
			<variable name="x7" column="second_team_pen" type="Integer" is_constant="false"/>
		</relational_formula>
	</lhs>
	<rhs>
		<relational_formula table="Allowed">
			<variable name="z1" column="ID" type="Integer" is_constant="false"/>
			<variable name="x2" column="team" type="String" is_constant="false"/>
		</relational_formula>
	</rhs>
	<false_query>
Select ID, first_team, second_team, first_team_goals, second_team_goals, first_team_pen, second_team_pen
From Games 
Where (first_team NOT IN (Select team from Allowed));
	</false_query>
	<true_query>
Select Games.ID, Games.first_team, Games.second_team, Games.first_team_goals, Games.second_team_goals, Games.first_team_pen, Games.second_team_pen, Allowed.ID, Allowed.team
From Games, Allowed
Where Games.first_team = Allowed.team;
	</true_query>
	<source_query>
Select ID, first_team, second_team, first_team_goals, second_team_goals, first_team_pen, second_team_pen
From Games 
Where (first_team IN ($1));
	</source_query>
</rule>

<rule type="tuple_generating">
	<lhs>
		<relational_formula table="Games">
			<variable name="x1" column="ID" type="Integer" is_constant="false"/>
			<variable name="x2" column="first_team" type="String" is_constant="false"/>
			<variable name="x3" column="second_team" type="String" is_constant="false"/>
			<variable name="x4" column="first_team_goals" type="Integer" is_constant="false"/>
			<variable name="x5" column="second_team_goals" type="Integer" is_constant="false"/>
			<variable name="x6" column="first_team_pen" type="Integer" is_constant="false"/>
			<variable name="x7" column="second_team_pen" type="Integer" is_constant="false"/>
		</relational_formula>
	</lhs>
	<rhs>
		<relational_formula table="Allowed">
			<variable name="z1" column="ID" type="Integer" is_constant="false"/>
			<variable name="x3" column="team" type="String" is_constant="false"/>
		</relational_formula>
	</rhs>
	<false_query>
Select ID, first_team, second_team, first_team_goals, second_team_goals, first_team_pen, second_team_pen
From Games 
Where (second_team NOT IN (Select team from Allowed));
	</false_query>
	<true_query>
Select Games.ID, Games.first_team, Games.second_team, Games.first_team_goals, Games.second_team_goals, Games.first_team_pen, Games.second_team_pen, Allowed.ID, Allowed.team
From Games, Allowed
Where Games.second_team = Allowed.team;
	</true_query>
	<source_query>
Select ID, first_team, second_team, first_team_goals, second_team_goals, first_team_pen, second_team_pen
From Games 
Where (second_team IN ($1));
	</source_query>
</rule>
</rules>